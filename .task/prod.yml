version: 3
silent: true
vars:
  SCRIPT: scripts/hcvault/archives/testing
  ENV_LOCATION: '{{.ENV_LOCATION | default "/please/set/ENV_LOCATION"}}'
tasks:
  gen-dir:init:
    desc: create bin directory
    cmds:
      - mkdir -p generated_manifests
    status:
      - test -d generated_manifests
  prometheus:deploy:
    deps:
      - task: :fetch:helm
      - task: :fetch:kubectl
    desc: install prometheus and grafana on cluster
    cmds:
      - ./bin/helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
      - ./bin/helm upgrade --install prometheus prometheus-community/kube-prometheus-stack --wait
      - ./bin/kubectl apply -f {{.SCRIPT}}/prometheus.yaml --wait
      - ./bin/kubectl apply -f {{.SCRIPT}}/grafana-dashboard.yaml --wait
  prometheus:port-forward:
    deps:
      - task: :fetch:kubectl
    desc: port forwarding for prometheus
    cmds:
      - ./bin/kubectl port-forward svc/prometheus-kube-prometheus-prometheus 9090
  grafana:port-forward:
    deps:
      - task: :fetch:kubectl
    desc: open grafana (admin/prom-operator)
    cmds:
      - ./bin/kubectl port-forward svc/prometheus-grafana 8300:80
  generate:systemd:
    desc: generate systemd services
    deps:
      - gen-dir:init
    cmds:
      - rm -rf generated_manifests/systemd/*
      - cp -rf deployment/systemd generated_manifests
      - cp -f {{.ENV_LOCATION}} generated_manifests/systemd/trousseau-env
  generate:docker-compose:
    desc: generate docker compose services
    deps:
      - gen-dir:init
      - :fetch:envsubst
    cmds:
      - mkdir -p generated_manifests/docker-compose ; rm -rf generated_manifests/docker-compose/*
      - source {{.ENV_LOCATION}} ;
        export $(echo "${!TR_*}") ;
        for f in `cd deployment ; find docker-compose -type f`; do ./bin/envsubst -no-empty -i deployment/$f -o generated_manifests/$f; done
  generate:kustomize:
    desc: generate kustomize manifests
    deps:
      - gen-dir:init
      - :fetch:envsubst
    cmds:
      - mkdir -p generated_manifests/kustomize ; rm -rf generated_manifests/kustomize/*
      - source {{.ENV_LOCATION}} ;
        TR_ENABLED_PROVIDERS=$(echo ${TR_ENABLED_PROVIDERS} | sed "s/ --/\n            - --/") ;
        test -n "${TR_AWSKMS_CONFIG}" && TR_AWSKMS_CONFIG=$(cat ${TR_AWSKMS_CONFIG} 2>/dev/null | sed 's/^/    /') ;
        export $(echo "${!TR_*}") ;
        for f in `cd deployment ; find kustomize -type f`; do ./bin/envsubst -no-empty -i deployment/$f -o generated_manifests/$f; done
